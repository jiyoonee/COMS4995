{"ast":null,"code":"var _jsxFileName = \"/Users/jiyoon-song/visualize-spotify/client/src/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\n\nfunction Login() {\n  const [nowPlaying, setNowPlaying] = useState({\n    name: 'Not Checked',\n    img: ''\n  });\n  useEffect(() => {\n    console.log(params);\n    console.log(nowPlaying);\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }, [nowPlaying]);\n\n  const getHashParams = () => {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  };\n\n  const getNowPlaying = () => {\n    spotifyWebApi.getMyCurrentPlaybackState().then(res => {\n      setNowPlaying({\n        name: res.item.name,\n        img: res.item.album.images[0].url\n      });\n    });\n  };\n\n  const params = getHashParams();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Intro-Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Welcome to Visualize-Spotify!\", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"20px\",\n      fontWeight: \"300\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Login to start\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login-Button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8888/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"auth-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"LOGIN WITH SPOTIFY\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      fontFamily: 'Avenir'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'white',\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Now Playing: \", nowPlaying.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: nowPlaying.img,\n    style: {\n      width: '100px',\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getNowPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Get Current Playing\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jiyoon-song/visualize-spotify/client/src/Login.js"],"names":["React","useState","useEffect","Spotify","Login","nowPlaying","setNowPlaying","name","img","console","log","params","access_token","spotifyWebApi","setAccessToken","getHashParams","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","res","item","album","images","url","fontSize","fontWeight","textAlign","fontFamily","color","paddingTop","width","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Spotify from 'spotify-web-api-js';\n\nfunction Login () {\n  const [nowPlaying, setNowPlaying] = useState({name: 'Not Checked', img: ''})\n  useEffect(() => {\n    console.log(params)\n    console.log(nowPlaying)\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token)\n    }\n  }, [nowPlaying])\n  const getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n  const getNowPlaying = () => {\n    spotifyWebApi.getMyCurrentPlaybackState()\n    .then((res) => {\n      setNowPlaying({name: res.item.name, img: res.item.album.images[0].url})\n    })\n  }\n  const params = getHashParams()\n  return (\n    <div className=\"App\">\n      <div className=\"Intro-Text\">\n        Welcome to Visualize-Spotify!\n        <div style={{ fontSize: \"20px\", fontWeight: \"300\" }}>Login to start</div>\n      </div>\n      <div className=\"Login-Button\">\n        <a href=\"http://localhost:8888/login\">\n          <button id=\"auth-button\">LOGIN WITH SPOTIFY</button>\n        </a>\n      </div>\n      <div style={{textAlign: 'center', fontFamily: 'Avenir'}}>\n        <div style={{color: 'white', paddingTop: '20px'}}>Now Playing: {nowPlaying.name}</div>\n        <img src={nowPlaying.img} style={{width: '100px', padding: '20px'}}/>\n        <div>\n          <button onClick={getNowPlaying}>\n            Get Current Playing\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}